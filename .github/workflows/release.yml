name: Build & Release (Forge 1.20.1 / Java 17)

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

permissions:
  contents: write   # needed to create GitHub Releases

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v2

      - name: Make Gradle wrapper executable
        run: chmod +x gradlew

      - name: "Read mod version (gradle.properties: mod_version=...)"
        id: meta
        shell: bash
        run: |
          set -e
          MOD_VERSION=$(grep '^mod_version=' gradle.properties | cut -d'=' -f2)
          if [ -z "$MOD_VERSION" ]; then
            echo "mod_version not found in gradle.properties"; exit 1
          fi
          echo "version=$MOD_VERSION" >> $GITHUB_OUTPUT
          echo "Detected mod_version=$MOD_VERSION"

      - name: Build
        run: ./gradlew --no-daemon build

      - name: Find release JAR
        id: jar
        shell: bash
        run: |
          set -e
          JAR=$(ls -1 build/libs/*.jar | grep -Ev '(-sources|-javadoc|-dev)\.jar$' | head -n1)
          if [ -z "$JAR" ]; then echo "No jar found in build/libs"; exit 1; fi
          echo "path=$JAR" >> $GITHUB_OUTPUT
          echo "Found JAR: $JAR"

      - name: Extract changelog section
        id: notes
        shell: bash
        run: |
          if [ -f CHANGELOG.md ]; then
            awk -v ver="${{ steps.meta.outputs.version }}" '
              $0 ~ "^## "ver" " {flag=1; next}
              $0 ~ "^## " && flag {flag=0}
              flag {print}
            ' CHANGELOG.md > RELEASE_NOTES.md || true
            [ -s RELEASE_NOTES.md ] || cp CHANGELOG.md RELEASE_NOTES.md
          else
            echo "Release ${{ steps.meta.outputs.version }}" > RELEASE_NOTES.md
          fi
          echo "notes_path=RELEASE_NOTES.md" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.meta.outputs.version }}-build-${{ github.run_number }}
          name: v${{ steps.meta.outputs.version }}
          body_path: ${{ steps.notes.outputs.notes_path }}
          files: ${{ steps.jar.outputs.path }}

      - name: Publish to Modrinth & CurseForge
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          # Project IDs / tokens
          modrinth-id: ${{ vars.MODRINTH_PROJECT_ID }}
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
          curseforge-id: ${{ vars.CURSEFORGE_PROJECT_ID }}
          curseforge-token: ${{ secrets.CURSEFORGE_TOKEN }}

          # Artifact
          files: ${{ steps.jar.outputs.path }}

          # Metadata
          name: v${{ steps.meta.outputs.version }}
          version: v${{ steps.meta.outputs.version }}
          version-type: release           # <-- fixed field name
          loaders: forge
          game-versions: ${{ vars.MC_VERSIONS || '1.20.1' }}

          # Changelog
          changelog: ${{ steps.notes.outputs.notes_path }}

