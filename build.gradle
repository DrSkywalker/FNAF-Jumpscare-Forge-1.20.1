plugins {
    id 'net.minecraftforge.gradle' version '6.0.+'
}

group = 'net.lee'
def modId = (project.findProperty('modid') ?: 'fnafmod').toString()
def modVersion = (project.findProperty('mod_version') ?: '1.0.0').toString()
def mcVersion = (project.findProperty('minecraft_version') ?: '1.20.1').toString()
def forgeVersion = (project.findProperty('forge_version') ?: '47.4.10').toString()
def mappingsCh = (project.findProperty('mappings_channel') ?: 'official').toString()
def mappingsVer = (project.findProperty('mappings_version') ?: mcVersion).toString()
def modName = (project.findProperty('mod_name') ?: 'FNAF Jumpscare (Forge)').toString()
def modAuthors = (project.findProperty('mod_authors') ?: 'Lee').toString()
def modDescription = (project.findProperty('mod_description') ?: 'UCN-style jumpscares on any screen, incl. main menu.').toString()

version = modVersion

java {
    toolchain { languageVersion = JavaLanguageVersion.of(17) }
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()
    maven { url = 'https://maven.minecraftforge.net' }
}

minecraft {
    mappings channel: mappingsCh, version: mappingsVer

    runs {
        client {
            workingDirectory project.file('run')
            args '--username', 'Dev'
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mcVersion}-${forgeVersion}"
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.release = 17
}

tasks.named('jar', Jar).configure {
    archiveBaseName.set(modId)
    manifest {
        attributes(
                'Implementation-Title': modName,
                'Implementation-Version': modVersion,
                'Implementation-Vendor': modAuthors
        )
    }
}

tasks.named('processResources', ProcessResources).configure {
    // Tell Gradle which tokens we will expand (for up-to-date checks)
    inputs.property 'modid', modId
    inputs.property 'mod_version', modVersion
    inputs.property 'mod_name', modName
    inputs.property 'mod_authors', modAuthors
    inputs.property 'mod_description', modDescription
    inputs.property 'minecraft_version', mcVersion
    inputs.property 'forge_version', forgeVersion

    // Expand ONLY mods.toml (avoid touching JSON/other assets)
    filesMatching('META-INF/mods.toml') {
        expand([
                modid            : modId,
                mod_version      : modVersion,
                mod_name         : modName,
                mod_authors      : modAuthors,
                mod_description  : modDescription,
                minecraft_version: mcVersion,
                forge_version    : forgeVersion
        ])
    }
}
